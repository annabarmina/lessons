# однострочный комментарий

'''
многострочный комментарий
можно продалжить
'''

"""
аналогично
"""

#1. Как объявить переменную
'''
# Переменная - поименованная область оперативной памяти,
из которой данные можно прочитать  или в которую их можно записать ('присвоение')

Ограничения на имена переменных:
- не могут начинаться с цифры,
- можно цифры, знак подчеркивания,
- не кириллица;
- нельзя зарезервированные слова

Python - регистрозависимый!!

ПОЧИТАТЬ "PEP-8" - стандарты оформления кода
'''
# присвоение значения переменной:
username = 'root'
# обращение через функцию
print(username)

username = 'rgtpy' # присвоить новое значение

# констант в Python нет.
# Хороший тон: если переменная написана CAPS, то это константа (т.е. неменяемая переменная)
print(username)

# ТИПЫ ДАННЫХ В PYTHON
"""
Тип данных переменной - ее характеристика и описывает следующее:
- кол-во памяти, которое занимает данный тип,
- диапазон допустимых значений,
- допустимые операции,
- формат отображения (для человека)

1) Простые (скалярные) типы данных
в 1 момент времени хранят 1 значение
хранятся в стэке, выделяется опр.объем памяти
    - int   - целое число;
    - float - число с плавающей точкой;
    - bool  - логическое значение (правда / ложь);
    - complex - комплексное число;
    - str   - строка,
    - bytes - только Python3 - байтовая строка,

2) Сложные (составные, структурные) типы
в 1 момент времени хранят любое кол-во значений любого типа,
память выделяется по мере надобности
    - tuple - кортеж,
    - list - список,
    - set - множество,
    - dict - словари,
    - object - объекты

3) Специальные типы данных
    - None - пустота, отсутствие значения

ТИП данных задавать не нужно.
Он самоопределяется в момент присвоения значения

2 шага создания переменных:
- декларация
- инициализация (т.е. нельзя просто "Let a")
"""
a = None

# bool  - логическое значение
flag1 = True      #важно писать с большой буквы
flag2 = False

# bool  - логическое значение
i1 = 666
# задать число в двоичной системе
i2 = 0b10101    # = начинается с нуля
# задать число в восьмиричной системе
i3 = Oo755    # начинается с большой 'о'

# float - число с плавающей точкой (дробь)
f1 = 1.23
f2 = 1e-3  #0.001
f3 = 1e6

# complex - комплексное число
c1 = 3.14j

# str   - строка
s1 = 'string'
s2 = "strig"
# одинаково работает и ', и ""
# символ экранирования \ (чтобы ввести в строку спец.символ)
s3 = "stri\"ng"
# чтобы ввести в строку ", использовать ''
s4 = 'str"ing'
# можно испольвать тройные '''
s5 = '''многостр"очная   ''
строка'''
print (s5)

s6 = r'\d+$'   # сырая строка (raw) - python ее не будет преобразовывать

s7 = u'Unicode in Python 2'

# bytes - только Python3 - байтовая строка (отсутствует кодировка)
s8 = b'Hello'
